/*
 * Copyright (c) 2012-2014, Synflow SAS
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of Synflow nor the names of its contributors may be
 *     used to endorse or promote products derived from this software without
 *     specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
package com.synflow.risc;

import com.synflow.risc.RISCV_Definitions.*;

network TopRiscV{
	firstjump = new com.synflow.risc.FirstJump();

	if_stage = new com.synflow.risc.if_stage.IF_stage();
	if_stage.reads(firstjump.pc);

	id_stage = new com.synflow.risc.id_stage.ID_stage();
	id_stage.reads(if_stage.instr,  wb_stage.rd_o, wb_stage.value_o);

	ex_stage = new com.synflow.risc.EX_stage();
	ex_stage.reads(id_stage.val1, id_stage.val2, id_stage.rd, id_stage.flags, id_stage.imm);

	mem_stage = new com.synflow.risc.mem_stage.MEM_stage();
	mem_stage.reads(ex_stage.addr, ex_stage.value, ex_stage.rd_o, ex_stage.flags_o);

	wb_stage = new com.synflow.risc.WB_stage();
	wb_stage.reads(mem_stage.rd_o, mem_stage.flags_o, mem_stage.fromMem, mem_stage.fromEx);
}
